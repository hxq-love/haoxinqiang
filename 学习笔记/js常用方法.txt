1.var a=window.confirm("询问框")   ---通过true判断事件
2.var b=window.prompt("内容","默认文本框的值")  ---以a的值也就是文本框的值为判断条件
3.js 数组排序  使用array.sort(function(a,b){a-b}) 使用reverse() 可以降序   或者使用冒泡排序
4.indexOf(值，开始检索的位置)    显示某个字段在字符串中显示的位置
5.localStorage 与 sessionStorage  本地存储使用  .setItem("key","value") 存储或修改 .getItem("key")  .removeItem("key) 
.clear()  清空所有   只能存储字符串，不能存储对象和数组
6.Data    getMonth()获取月份 要加一  getFullYear()获取四位数年份  getDate() 获取几号  getDay()得到周几
	 getHours() 获取小时  getMinuts() 获取分钟 getSeconds()获取秒
7 min(),max()方法，返回两个数最大值和最小值
8 apply与call方法
9 reverse() 颠倒数组中顺序
10 slice splice split
   substr() substring charAt
11 document.location.reload()
12.优化页面的一些方法
   

    1.优化图片

    2.图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方）

    3.优化CSS（压缩合并css，如margin-top,margin-left…)

    4.网址后加斜杠（如www.campr.com/目录，会判断这个“目录是什么文件类型，或者是目录。）

    5.标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了。）

    6.减少http请求（合并文件，合并图片）。

13 .解释下浏览器是如何判断元素是否匹配某个CSS选择器

    从后往前判断。浏览器先产生一个元素集合，这个集合往往由最后一个部分的索引产生（如果没有索引就是所有元素的集合）。
然后向上匹配，如果不符合上一个部分，就把元素从集合中删除，直到真个选择器都匹配完，还在集合中的元素就匹配这个选择器了。
举个例子，有选择器：body.ready#wrapper>.lol233

14 解释下JavaScript中this是如何工作的

	this永远指向函数运行时所在的对象，而不是函数被创建时所在的对象。匿名函数或不处于任何对象中的函数指向window 。

    1.如果是call，apply,with，指定的this是谁，就是谁。

    2.普通的函数调用，函数被谁调用，this就是谁。

15. 解释下为什么接下来这段代码不是IIFE(立即调用的函数表达式)：function foo(){}()
    因为在解析器解析全局的function或者function内部function关键字的时候，默认是认为function声明，
    而不是function表达式，如果你不显示告诉编译器，它默认会声明成一个缺少名字的function，并且抛出一个语法错误信息，
    因为function声明需要一个名字。

16 请指出和和.fn的区别，或者说出$.fn的用途
   $.extend(obj);给JQUERY对象添加方法。
   $.fn.extend(obj)；对prototype进行扩展，为jquery类添加成员函数，jquery类的实例可以使用这个成员函数。